{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/PhoneBook/PhoneBook.module.css","components/FindContact/FindContact.module.css","components/Spinner/Spinner.module.css","redux/phonebook-actions.js","redux/phonebook-operations.js","redux/phonebook-selectors.js","redux/phonebook-reducers.js","redux/phonebook-store.js","components/Form/Form.js","components/FindContact/FindContact.js","components/ContactList/ContactList.js","components/Spinner/Spinner.js","components/PhoneBook/Phonebook.js","App.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contact","dispatch","newContact","name","number","contactActions","post","then","data","catch","error","id","delete","get","getContacts","state","contacts","getFilter","filter","getLoading","loding","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","createReducer","_","payload","item","action","loading","combineReducers","store","configureStore","reducer","contactReducers","devTools","process","initialState","Form","addContactHandler","event","preventDefault","props","find","alert","onSubmit","resetInputs","changeHandler","currentTarget","value","setState","className","styles","form","this","input_name","type","placeholder","onChange","input_num","btn_add","Component","connect","contactSelectors","contactOperations","target","find_contact","ContactList","showContacts","contact_list","renderItems","map","contact_list_item","key","contact_name","contact_number","btn_delete","title","onClick","handler","Spinner","spinner","color","height","width","Phonebook","phonebook","isloading","phonebook_header","section_header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a45215ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__3Oc4x\",\"contact_list_item\":\"ContactList_contact_list_item__-SX2V\",\"btn_delete\":\"ContactList_btn_delete__rw0JX\",\"contact_name\":\"ContactList_contact_name__16ElV\",\"contact_number\":\"ContactList_contact_number__sx8Qx\",\"total_contacts\":\"ContactList_total_contacts__1IrPn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"input_name\":\"Form_input_name__1ZOWf\",\"input_num\":\"Form_input_num__2GmlK\",\"btn_add\":\"Form_btn_add__A_Mxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"PhoneBook_phonebook__2sJx_\",\"phonebook_header\":\"PhoneBook_phonebook_header__2yB4I\",\"section_header\":\"PhoneBook_section_header__1yS1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find_contact\":\"FindContact_find_contact__1SlRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst getContactsRequest = createAction('contacts/getContactsRequest');\nconst getContactsSuccess = createAction('contacts/getContactsSuccess');\nconst getContactsError = createAction('contacts/getContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\n\n\nconst changeFilter = createAction('contacts/filter')\n\nexport default {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter\n}","import axios from 'axios';\nimport contactActions from './phonebook-actions'\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactActions.getContactsRequest())\n\n  axios.get('/contacts').then(({ data }) => dispatch(contactActions.getContactsSuccess(data))).catch(error => dispatch(contactActions.getContactsError(error)))\n}\n\n\nconst addContact = contact => dispatch => {\n  const newContact = {\n    name: contact.name,\n    number: contact.number\n  };\n\n  dispatch(contactActions.addContactRequest())\n\n\n  axios.post('/contacts', newContact).then(({ data }) => dispatch(contactActions.addContactSuccess(data))).catch(error => dispatch(contactActions.addContactError(error)))\n}\n\nconst deleteContact = id => dispatch => {\n  dispatch(contactActions.deleteContactRequest())\n\n  axios.delete(`/contacts/${id}`).then(() => dispatch(contactActions.deleteContactSuccess(id))).catch(error => dispatch(contactActions.deleteContactError(error)))\n}\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\n\nconst getContacts = (state) => state.contacts;\nconst getFilter = (state) => state.filter;\nconst getLoading = (state) => state.loding;\n\nconst getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n});\n\nexport default {\n  getContacts,\n  getFilter,\n  getLoading,\n  getFilteredContacts\n}","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactActions from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [contactActions.getContactsSuccess]: (_, { payload }) => payload,\n  [contactActions.addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [contactActions.deleteContactSuccess]: (state, { payload }) => state.filter(item => item.id !== payload,)\n})\n\nconst filter = createReducer('', {\n  [contactActions.changeFilter]: (_, action) => action.payload,\n})\n\nconst loading = createReducer(false, {\n  [contactActions.getContactsRequest]: () => true,\n  [contactActions.getContactsSuccess]: () => false,\n  [contactActions.getContactsError]: () => false,\n  [contactActions.addContactRequest]: () => true,\n  [contactActions.addContactSuccess]: () => false,\n  [contactActions.addContactError]: () => false,\n  [contactActions.deleteContactRequest]: () => true,\n  [contactActions.deleteContactSuccess]: () => false,\n  [contactActions.deleteContactError]: () => false,\n})\n\nexport default combineReducers({ contacts, filter, loading });","import { configureStore } from '@reduxjs/toolkit';\nimport contactReducers from './phonebook-reducers';\n\n\nconst store = configureStore({\n  reducer: contactReducers,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactOperations, contactSelectors } from '../../redux'\nimport styles from './Form.module.css';\n\nconst initialState = {\n  name: '',\n  number: ''\n}\n\n\nclass Form extends Component {\n\n  state = {\n    name: '',\n    number: ''\n  }\n\n  addContactHandler = (event) => {\n    event.preventDefault()\n    if (this.props.contacts.find(contact => contact.name.toLowerCase() === this.state.name.toLowerCase())) {\n      alert(`${this.state.name} already in your contact list`)\n      return;\n    }\n\n    this.props.onSubmit(this.state)\n    this.resetInputs()\n  };\n\n  changeHandler = event => {\n    const { name, value } = event.currentTarget\n    this.setState({ [name]: value });\n  }\n\n  resetInputs = () => {\n    this.setState(initialState)\n  }\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.addContactHandler}>\n        <label>\n          <input className={styles.input_name} name='name' type='text' placeholder='Name' value={this.state.name} onChange={this.changeHandler}></input>\n        </label>\n        <label>\n          <input className={styles.input_num} name='number' type='tel' placeholder='Number' value={this.state.number} onChange={this.changeHandler}></input>\n        </label>\n        <button className={styles.btn_add} type='submit'>Add contact</button>\n      </form>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: data => dispatch(contactOperations.addContact(data)),\n})\n\nconst mapStateToProps = (state) => ({\n  contacts: contactSelectors.getContacts(state),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { contactActions, contactSelectors } from '../../redux/';\nimport styles from './FindContact.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    <input className={styles.find_contact} type='text' placeholder='Find contact by name' value={value} onChange={onChange}></input>\n  </label>\n);\n\nconst mapStateToProps = (state) => ({\n  value: contactSelectors.getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (event) => dispatch(contactActions.changeFilter(event.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { contactOperations, contactSelectors } from '../../redux';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.showContacts()\n  }\n  render() {\n    return (\n      <>\n        <ul className={styles.contact_list}>\n          {this.props.renderItems.map(item => (<li className={styles.contact_list_item} key={item.id}><span className={styles.contact_name}>{item.name}: </span><span className={styles.contact_number}>{item.number}</span>\n            <button className={styles.btn_delete} title='delete'\n              onClick={() => this.props.handler(item.id)}\n            >x</button>\n          </li>))}\n        </ul>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  renderItems: contactSelectors.getFilteredContacts(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  handler: id => dispatch(contactOperations.deleteContact(id)),\n  showContacts: () => dispatch(contactOperations.fetchContacts())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n\n","\nimport React, { Component } from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from './Spinner.module.css'\nimport Loader from 'react-loader-spinner';\n\nclass Spinner extends Component {\n\n  render() {\n    return (\n      <Loader className={styles.spinner} type=\"Grid\" color=\"#00BFFF\" height={70} width={70} />\n    );\n  }\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactSelectors } from '../../redux';\nimport Form from '../Form';\nimport Filter from '../FindContact';\nimport ContactList from '../ContactList';\nimport Spinner from '../Spinner';\nimport styles from './PhoneBook.module.css';\n\n\n\n\nclass Phonebook extends Component {\n  render() {\n    return (\n      <div className={styles.phonebook}>\n        {this.props.isloading ? <Spinner /> : <h1 className={styles.phonebook_header}>Phonebook</h1>}\n        <h2 className={styles.section_header}>Create a new contact</h2>\n        <Form />\n\n        <h2 className={styles.section_header}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div >\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isloading: contactSelectors.getLoading(state)\n})\n\n\n\nexport default connect(mapStateToProps, null)(Phonebook);\n","import React, { Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport './css/body.css';\nimport Phonebook from './components';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Provider store={store}>\n        <Phonebook />\n      </Provider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}